/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BlockMapBuilder
<<<<<<< HEAD
<<<<<<< HEAD
 * @format
=======
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
=======
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
 * @flow
 */

'use strict';

import type { BlockMap } from './BlockMap';
<<<<<<< HEAD
<<<<<<< HEAD
import type { BlockNodeRecord } from './BlockNodeRecord';
=======
import type ContentBlock from './ContentBlock';
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
=======
import type ContentBlock from './ContentBlock';
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b

var Immutable = require('immutable');

var { OrderedMap } = Immutable;

var BlockMapBuilder = {
<<<<<<< HEAD
<<<<<<< HEAD
  createFromArray: function (blocks: Array<BlockNodeRecord>): BlockMap {
=======
  createFromArray: function (blocks: Array<ContentBlock>): BlockMap {
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
=======
  createFromArray: function (blocks: Array<ContentBlock>): BlockMap {
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
    return OrderedMap(blocks.map(block => [block.getKey(), block]));
  }
};

module.exports = BlockMapBuilder;