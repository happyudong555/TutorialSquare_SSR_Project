<<<<<<< HEAD
import { tokens } from '../tokenTypes'

const { SPACE, IDENT, STRING } = tokens

export default tokenStream => {
  let fontFamily

  if (tokenStream.matches(STRING)) {
    fontFamily = tokenStream.lastValue
  } else {
    fontFamily = tokenStream.expect(IDENT)
    while (tokenStream.hasTokens()) {
      tokenStream.expect(SPACE)
      const nextIdent = tokenStream.expect(IDENT)
      fontFamily += ` ${nextIdent}`
    }
  }

  tokenStream.expectEmpty()

  return fontFamily
}
=======
const { tokens } = require('../tokenTypes');

const { SPACE, IDENT, STRING } = tokens;

module.exports = (tokenStream) => {
  let fontFamily;

  if (tokenStream.matches(STRING)) {
    fontFamily = tokenStream.lastValue;
  } else {
    fontFamily = tokenStream.expect(IDENT);
    while (tokenStream.hasTokens()) {
      tokenStream.expect(SPACE);
      const nextIdent = tokenStream.expect(IDENT);
      fontFamily += ` ${nextIdent}`;
    }
  }

  tokenStream.expectEmpty();

  return fontFamily;
};
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
