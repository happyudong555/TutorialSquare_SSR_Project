<<<<<<< HEAD
<<<<<<< HEAD
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
=======
'use strict';
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
=======
'use strict';
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD
<<<<<<< HEAD
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _webpackSources = require("webpack-sources");

var isImportChunk = /^chunks[/\\]/;
var matchChunkName = /^chunks[/\\](.*)$/;

var DynamicChunkTemplatePlugin =
/*#__PURE__*/
function () {
  function DynamicChunkTemplatePlugin() {
    (0, _classCallCheck2.default)(this, DynamicChunkTemplatePlugin);
  }

  (0, _createClass2.default)(DynamicChunkTemplatePlugin, [{
    key: "apply",
    value: function apply(chunkTemplate) {
      chunkTemplate.plugin('render', function (modules, chunk) {
        if (!isImportChunk.test(chunk.name)) {
          return modules;
        }

        var chunkName = matchChunkName.exec(chunk.name)[1];
        var source = new _webpackSources.ConcatSource();
        source.add("\n        __NEXT_REGISTER_CHUNK('".concat(chunkName, "', function() {\n      "));
        source.add(modules);
        source.add("\n        })\n      ");
        return source;
      });
    }
  }]);
  return DynamicChunkTemplatePlugin;
}();

var DynamicChunksPlugin =
/*#__PURE__*/
function () {
  function DynamicChunksPlugin() {
    (0, _classCallCheck2.default)(this, DynamicChunksPlugin);
  }

  (0, _createClass2.default)(DynamicChunksPlugin, [{
    key: "apply",
    value: function apply(compiler) {
      compiler.plugin('compilation', function (compilation) {
        compilation.chunkTemplate.apply(new DynamicChunkTemplatePlugin());
        compilation.plugin('additional-chunk-assets', function (chunks) {
          chunks = chunks.filter(function (chunk) {
            return isImportChunk.test(chunk.name) && compilation.assets[chunk.name];
          });
          chunks.forEach(function (chunk) {
            // This is to support, webpack dynamic import support with HMR
            var copyFilename = "chunks/".concat(chunk.name);
            compilation.additionalChunkAssets.push(copyFilename);
            compilation.assets[copyFilename] = compilation.assets[chunk.name];
          });
        });
      });
    }
  }]);
  return DynamicChunksPlugin;
}();

exports.default = DynamicChunksPlugin;
=======
=======
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PagesPlugin = function () {
  function PagesPlugin() {
    (0, _classCallCheck3.default)(this, PagesPlugin);
  }

  (0, _createClass3.default)(PagesPlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var isImportChunk = /^chunks[/\\].*\.js$/;
      var matchChunkName = /^chunks[/\\](.*)$/;

      compiler.plugin('after-compile', function (compilation, callback) {
        var chunks = (0, _keys2.default)(compilation.namedChunks).map(function (key) {
          return compilation.namedChunks[key];
        }).filter(function (chunk) {
          return isImportChunk.test(chunk.name);
        });

        chunks.forEach(function (chunk) {
          var asset = compilation.assets[chunk.name];
          if (!asset) return;

          var chunkName = matchChunkName.exec(chunk.name)[1];

          var content = asset.source();
          var newContent = '\n          window.__NEXT_REGISTER_CHUNK(\'' + chunkName + '\', function() {\n            ' + content + '\n          })\n        ';
          // Replace the exisiting chunk with the new content
          compilation.assets[chunk.name] = {
            source: function source() {
              return newContent;
            },
            size: function size() {
              return newContent.length;
            }

            // This is to support, webpack dynamic import support with HMR
          };compilation.assets['chunks/' + chunk.id] = {
            source: function source() {
              return newContent;
            },
            size: function size() {
              return newContent.length;
            }
          };
        });
        callback();
      });
    }
  }]);
  return PagesPlugin;
}();

<<<<<<< HEAD
exports.default = PagesPlugin;
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
=======
exports.default = PagesPlugin;
>>>>>>> 3e7cc9eba236ff5c5205c34bae31be88b995768b
